local dev = true
local key = "YOUR_KEY_HERE"
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Wait for game to fully load
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Wait for player character to spawn
if not player.Character then
    player.CharacterAdded:Wait()
end

-- Chat function
function chat(msg)
    if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
        TextChatService.TextChannels.RBXGeneral:SendAsync(msg)
    else
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
    end
end

-- Function to check server status
local function checkServerStatus()
    local success, result = pcall(function()
        return game:HttpGet("https://realtime.skinarcade.com")
    end)
    
    if success then
        local parseSuccess, decoded = pcall(function()
            return HttpService:JSONDecode(result)
        end)
        
        if parseSuccess and decoded and decoded.success == true then
            print("Server: Online")
            return true
        else
            print("Server: Invalid response")
            return false
        end
    else
        print("Server: Offline")
        return false
    end
end

-- Function to make GET request
local function makeGetRequest(url)
    local success, result = pcall(function()
        return game:HttpGet(url)
    end)
    
    if success then
        return result
    else
        print("GET failed:", result)
        return nil
    end
end

-- Function to make POST request
local function makePostRequest(url, body)
    local success, result = pcall(function()
        return game:HttpPost(url, body or "NULL")
    end)
    
    if success then
        return result
    else
        print("POST failed:", result)
        return nil
    end
end

-- Function to authenticate bot
local function authenticateBot()
    local authData = HttpService:JSONEncode({
        username = player.Name,
        key = key
    })
    
    local response = makePostRequest("https://realtime.skinarcade.com/api/bot/available", authData)
    
    if response then
        local success, decoded = pcall(function()
            return HttpService:JSONDecode(response)
        end)
        
        if success and decoded and decoded.success == true then
            print("Auth: Success")
            return true
        else
            print("Auth: Failed")
            return false
        end
    else
        print("Auth: No response")
        return false
    end
end

-- Main execution
local serverUp = checkServerStatus()

if not serverUp then
    print("Bot: Server down, stopping")
    return
end

if dev then
    print("Bot: Dev mode active")
else
    print("Bot: Authenticating...")
    local authSuccess = authenticateBot()
    
    if not authSuccess then
        print("Bot: Auth failed, stopping")
        return
    end
    
    -- Landing item list (only if dev is false)
    makeGetRequest("https://realtime.skinarcade.com/api/bot/landing")
    
    -- Deposit complete (only if dev is false)
    makePostRequest("https://realtime.skinarcade.com/api/bot/deposit/complete")
end

print("Bot: Ready")
